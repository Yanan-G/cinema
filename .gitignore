# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

# # Local .terraform directories
# infra/.terraform/*

# # .tfstate files
# infra/.tfstate
# infra/.tfstate.*

# # Crash log files
# crash.log

# # Exclude all .tfvars files, which are likely to contain sentitive data, such as
# # password, private keys, and other secrets. These should not be part of version 
# # control as they are data points which are potentially sensitive and subject 
# # to change depending on the environment.
# #
# infra/.tfvars

# # Ignore override files as they are usually used to override resources locally and so
# # are not checked in
# infra/override.tf
# infra/override.tf.json
# infra/*_override.tf
# infra/*_override.tf.json

# # Include override files you do wish to add to version control using negated pattern
# #
# # !example_override.tf

# # Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# # example: *tfplan*

# # Ignore CLI configuration files
# .terraformrc
# terraform.rc